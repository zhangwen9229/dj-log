'use strict'; var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e }; !(function () { if (window.errLogReport) return window.errLogReport; function u (n) { (n = n || {}).type = (n.type || 'GET').toUpperCase(), n.dataType = n.dataType || 'json'; var e = (function (e) { var n = []; for (var o in e)n.push(encodeURIComponent(o) + '=' + encodeURIComponent(e[o])); return n.push(('v=' + Math.random()).replace('.', '')), n.join('&') }(n.data)); if (window.XMLHttpRequest) var o = new XMLHttpRequest(); else o = new ActiveXObject('Microsoft.XMLHTTP'); o.onreadystatechange = function () { if (o.readyState == 4) { var e = o.status; e >= 200 && e < 300 ? n.success && n.success(o.responseText, o.responseXML) : n.fail && n.fail(e) } }, n.type == 'GET' ? (o.open('GET', n.url + '?' + e, !0), o.send(null)) : n.type == 'POST' && (o.open('POST', n.url, !0), o.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'), o.send(e)) } function c () { var e = arguments; if (!(e.length < 2)) { for (var n = (function (e) { if ((void 0 === e ? 'undefined' : _typeof(e)) !== 'object') return e; if (e == null) return e; var n = new Object(); for (var o in e)n[o] = e[o]; return n }(e[0])), o = 1, r = e.length; o < r; o++) for (var t in e[o])n[t] = e[o][t]; return n } } var e; var n; var o; var d = { ua: window.navigator.userAgent, browser: (n = navigator.userAgent, o = n.indexOf('Opera') > -1, o ? 'Opera' : n.indexOf('Firefox') > -1 ? 'FF' : n.indexOf('Chrome') > -1 ? 'Chrome' : n.indexOf('Safari') > -1 ? 'Safari' : n.indexOf('compatible') > -1 && n.indexOf('MSIE') > -1 && !o ? 'IE' : void 0), os: (function () { var e = navigator.userAgent; if (navigator.appVersion, !/AppleWebKit.*Mobile/i.test(navigator.userAgent) && !/MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/.test(navigator.userAgent)) return e.indexOf('iPad') > -1 ? 'iPhone' : 'Android'; if (window.location.href.indexOf('?mobile') < 0) try { return /iPhone|mac|iPod|iPad/i.test(navigator.userAgent) ? 'iPhone' : 'Android' } catch (e) {} }()), osVersion: (e = window.navigator.userAgent, e.indexOf('CPU iPhone OS ') >= 0 ? e.substring(e.indexOf('CPU iPhone OS ') + 14, e.indexOf(' like Mac OS X')) : e.indexOf('Android ') >= 0 ? e.substr(e.indexOf('Android ') + 8, 3) : 'other'), errUrl: window.location.href, msg: '', url: '', line: '', col: '', error: '' }; window.errLogReport = function (s) { s.url && (window.onerror = function (e, t, i, a, f) { return setTimeout(function () { if (a = a || window.event && window.event.errorCharacter || 0, d.url = t, d.line = i, d.col = a, f && f.stack)d.msg = f.stack.toString(); else if (arguments.callee) { for (var e = [], n = arguments.callee.caller, o = 3; n && --o > 0 && (e.push(n.toString()), n !== n.caller);)n = n.caller; d.msg = e.join(',') } var r = c(s.data || {}, d); console.log(r), u({ url: s.url, type: 'POST', data: r, dataType: 'json', success: function (e, n) { s.successCallBack && s.successCallBack(e, n) }, fail: function (e) { s.failCallBack && s.failCallBack(e) } }) }, 0), !0 }) } }()), typeof module !== 'undefined' ? module.exports = window.errLogReport : typeof define === 'function' && define.amd && define([], function () { return window.errLogReport })
